!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common/http"),require("rxjs/operators"),require("rxjs"),require("@stomp/ng2-stompjs"),require("@progress/kendo-angular-notification"),require("@angular/common"),require("@angular/forms"),require("@progress/kendo-angular-buttons"),require("@progress/kendo-angular-dropdowns"),require("@progress/kendo-angular-inputs"),require("@progress/kendo-angular-dateinputs")):"function"==typeof define&&define.amd?define("@tb/logger",["exports","@angular/core","@angular/common/http","rxjs/operators","rxjs","@stomp/ng2-stompjs","@progress/kendo-angular-notification","@angular/common","@angular/forms","@progress/kendo-angular-buttons","@progress/kendo-angular-dropdowns","@progress/kendo-angular-inputs","@progress/kendo-angular-dateinputs"],t):t((e.tb=e.tb||{},e.tb.logger={}),e.ng.core,e.ng.common.http,e.rxjs.operators,e.rxjs,null,null,e.ng.common,e.ng.forms,null,null,null,null)}(this,function(e,t,s,a,i,r,o,n,l,p,g,c,u){"use strict";var d=function C(){},h=function k(){},f=function q(){},b=function T(){},m={Info:0,Debug:1,Warn:2,Error:3,Fatal:4};function v(e,t){var o="function"==typeof Symbol&&e[Symbol.iterator];if(!o)return e;var r,n,s=o.call(e),a=[];try{for(;(void 0===t||0<t--)&&!(r=s.next()).done;)a.push(r.value)}catch(i){n={error:i}}finally{try{r&&!r.done&&(o=s["return"])&&o.call(s)}finally{if(n)throw n.error}}return a}function y(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(v(arguments[t]));return e}m[m.Info]="Info",m[m.Debug]="Debug",m[m.Warn]="Warn",m[m.Error]="Error",m[m.Fatal]="Fatal";var w=function(){function e(e,t,o){this.env=e,this.http=t,this.stompService=o,this.howMany=100,this.mqConnectionState=r.StompState.CLOSED,this.mqConnectionStateObservable=new i.BehaviorSubject(r.StompState.CLOSED),e.stompConfig&&this.mqInit()}return e.prototype.mqInit=function(){var t=this;this.env.stompConfig&&(this.stompService.config=this.env.stompConfig,this.stompService.initAndConnect(),this.stompService.state.subscribe(function(e){t.mqConnectionState=e,t.mqConnectionStateObservable.next(e)}))},e.prototype.getLoggerUrl=function(){return this.loggerUrl?this.loggerUrl:this.env.logger.url},e.prototype.log=function(e){for(var t=[],o=1;o<arguments.length;o++)t[o-1]=arguments[o];console.log.apply(console,y([e],t))},e.prototype.debug=function(e){for(var t=[],o=1;o<arguments.length;o++)t[o-1]=arguments[o];console.log.apply(console,y([e],t))},e.prototype.warn=function(e){for(var t=[],o=1;o<arguments.length;o++)t[o-1]=arguments[o];console.warn.apply(console,y([e],t))},e.prototype.error=function(e){for(var t=[],o=1;o<arguments.length;o++)t[o-1]=arguments[o];console.error.apply(console,y([e],t))},e.prototype.getLogs=function(e){if(!e.appId){var t=new f;return t.Result=!1,t.Message="Error - No appId, no party",i.of(t)}var o=this.getLoggerUrl()+"entries/"+e.appId,r=new s.HttpParams;r=r.append("howMany",""+this.howMany),e.apps&&(r=r.append("apps",e.apps)),e.appTypes&&(r=r.append("appTypes",e.appTypes));var n={params:r};return this.http.get(o,n).pipe(a.tap(function(e){return console.log("TbLoggerService.getLogs",e)}),a.catchError(this.handleError("TbLoggerService.getLogs",!1)))},e.prototype.getApps=function(t){if(!t){var e=new f;return e.Result=!1,e.Message="Error - No appId, no party",i.of(e)}var o=this.getLoggerUrl()+"apps/"+t;return this.http.get(o).pipe(a.tap(function(e){return console.log("TbLoggerService.getApps with appId: ",t,e)}),a.catchError(this.handleError("TbLoggerService.getApps",!1)))},e.prototype.getAppTypes=function(t){if(!t){var e=new f;return e.Result=!1,e.Message="Error - No appId, no party",i.of(e)}var o=this.getLoggerUrl()+"appTypes/"+t;return this.http.get(o).pipe(a.tap(function(e){return console.log("TbLoggerService.getAppTypes with appId: ",t,e)}),a.catchError(this.handleError("TbLoggerService.getAppTypes",!1)))},e.prototype.handleError=function(t,o){return void 0===t&&(t="operation"),function(e){return console.error(t+" failed: "+e.message),i.of(o)}},e.prototype.mqConnect=function(e){return this.stompService.subscribe(e).pipe(a.map(function(e){return JSON.parse(e.body)}))},e.prototype.mqConnected=function(){return this.stompService.connected()},e.prototype.mqDisconnect=function(){return this.stompService.disconnect()},e.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:undefined,decorators:[{type:t.Inject,args:["env"]}]},{type:s.HttpClient},{type:r.StompRService}]},e.ngInjectableDef=t.defineInjectable({factory:function(){return new e(t.inject("env"),t.inject(s.HttpClient),t.inject(r.StompRService))},token:e,providedIn:"root"}),e}(),x=function(){function e(e){this.loggerService=e,this.appId=localStorage.getItem("appId")?localStorage.getItem("appId"):"",this.appData=[],this.app=localStorage.getItem("app")?localStorage.getItem("app"):"",this.appTypeData=[],this.appType=localStorage.getItem("appType")?localStorage.getItem("appType"):"",this.logs=[],this.logStatus=m,this.show=!1,this.loading=!1,this.howMany=100,this.checked=!1,this.autoRefresh=!1,this.message="",this.loggerUrl=localStorage.getItem("loggerUrl")?localStorage.getItem("loggerUrl"):this.loggerService.getLoggerUrl()}return e.prototype.ngOnInit=function(){this.appListInit(),this.getLogs()},e.prototype.ngAfterViewInit=function(){},e.prototype.appListInit=function(){var t=this;if(!this.appId)return!1;this.loggerService.getApps(this.appId).subscribe(function(e){t.appData=e.Content,t.appList.loading=!1}),this.loggerService.getAppTypes(this.appId).subscribe(function(e){t.appTypeData=e.Content,t.appTypeList.loading=!1})},e.prototype.getLogs=function(){var t=this;if(!this.appId)return this.message="Instance Key mancante",void this.appIdInput.nativeElement.focus();this.loading=!0;var e=new d;e.appId=this.appId,this.app&&(e.apps=this.app),this.appType&&(e.appTypes=this.appType),this.loggerService.getLogs(e).subscribe(function(e){if(!e.Result)return t.message=e.Message,t.logs=[],t.loading=!1;t.message="",t.logs=e.Content,t.loading=!1})},e.prototype.setLoggerUrl=function(e){localStorage.setItem("loggerUrl",this.loggerUrl),this.getLogs()},e.prototype.setApp=function(e){localStorage.setItem("app",this.app),this.getLogs()},e.prototype.setAppId=function(e){localStorage.setItem("appId",this.appId),this.getLogs()},e.prototype.setAppType=function(e){localStorage.setItem("appType",this.appType),this.getLogs()},e.prototype.close=function(){clearInterval(this.autoRefreshInterval)},e.prototype.checkAutoRefresh=function(e){var t=this;this.autoRefresh=!this.autoRefresh,this.autoRefresh?(this.getLogs(),this.autoRefreshInterval=setInterval(function(){t.getLogs()},5e3)):this.autoRefreshInterval&&clearInterval(this.autoRefreshInterval)},e.decorators=[{type:t.Component,args:[{selector:"tb-logger-viewer",template:'<div class="header">\n    <div class="row">\n        <label id="logger-url-label" class="h-label" for="logger-url">Logger URL:</label>\n        <input kendoTextBox id="logger-url" [(ngModel)]="loggerUrl" (blur)="setLoggerUrl($event)" (click)="$event.target.select()" />\n        <span class="k-icon k-i-reset " (click)="getLogs()"></span>\n\n        <div class="autorefresh">\n            <input type="checkbox" id="autoRefresh" class="k-checkbox" [ngModel]="checked" (ngModelChange)="checkAutoRefresh($event)">\n            <label class="k-checkbox-label" for="autoRefresh">Auto refresh (5s)</label>\n        </div>\n    </div>\n    <div class="row">\n\n        <div class="filter">\n            \x3c!-- APP ID --\x3e\n            <label id="logger-app-id-label" class="h-label" for="logger-app-id" (click)="appListInit()">Instance Key:</label>\n            <input kendoTextBox #appIdInput [(ngModel)]="appId" (blur)="setAppId($event)" id="ka-app-id" (click)="$event.target.select()"\n                placeholder="e.g. 2d136c61-aac2-442d-926c-a531c3685035" />\n        </div>\n\n        <div class="filter">\n            \x3c!-- APP --\x3e\n            <label id="logger-app-label" class="h-label" for="logger-app">App:</label>\n            <kendo-autocomplete #appList [data]="appData" [suggest]="true" [placeholder]="\'e.g. ERP, MDC, TBF\'"\n                [(ngModel)]="app" (valueChange)="setApp($event)" id="ka-app">\n            </kendo-autocomplete>\n        </div>\n\n        <div class="filter">\n            \x3c!-- APP TYPE --\x3e\n            <label id="logger-app-type-label" class="h-label" for="logger-app-type">AppType:</label>\n            <kendo-autocomplete #appTypeList [data]="appTypeData" [suggest]="true" [placeholder]="\'e.g. TBLOADER, NETCORE, NG\'"\n                [(ngModel)]="appType" (valueChange)="setAppType($event)" id="ka-app-type">\n            </kendo-autocomplete>\n        </div>\n\n    </div>\n    <div class="notify" *ngIf="message">\n        <p>{{message}}</p>\n    </div>\n</div>\n\n<div class="monitor">\n\n    <div class="loading" *ngIf="loading">\n        <span class="k-icon k-i-loading"></span>\n    </div>\n\n    <ul class="logs" *ngIf="!loading">\n        <li *ngIf="logs.length == 0" class="no-logs">No Logs with appId:<strong>{{appId}}</strong></li>\n        <li *ngFor="let log of logs" class="log">\n            <span class="l-date">{{log.LogEntry.EntryCreated | date: \'medium\' }} </span> -\n            <span class="l-account-name"> {{log.LogEntry.AccountName }} </span> -\n            <span class="l-app" *ngIf="log.LogEntry.App"> {{log.LogEntry.App }} -</span>\n            <span class="l-type" *ngIf="log.LogEntry.RegisteredAppType"> {{log.LogEntry.RegisteredAppType }} -</span>\n            <span class="l-category" *ngIf="log.LogEntry.Category"> {{log.LogEntry.Category }} -</span>\n            <span class="l-status level-{{log.LogEntry.Level}}">[{{logStatus[log.LogEntry.Level]}}]</span>\n            <span class="l-msg"> {{log.LogEntry.Message}} </span>\n        </li>\n    </ul>\n</div>',styles:[":host(tb-logger-viewer){flex:1;display:flex;flex-direction:column}:host(tb-logger-viewer) .notify{background:#ff0b0b;padding:5px 10px;margin:10px 0;color:#fff}:host(tb-logger-viewer) .notify p{margin:5px 0;font-size:12px}:host(tb-logger-viewer) .header{display:flex;flex-direction:column;margin:30px 0 10px}:host(tb-logger-viewer) .header .row{display:flex;flex-direction:row;align-items:center;margin:5px 0}:host(tb-logger-viewer) .header .row.flex-center{justify-content:center}:host(tb-logger-viewer) .header .row.flex-around{justify-content:space-around}:host(tb-logger-viewer) .header .row.flex-between{justify-content:space-between}:host(tb-logger-viewer) .header .row .filter #ka-app-id{width:330px}:host(tb-logger-viewer) .header label.h-label{font-weight:500;font-size:14px;margin:0 10px}:host(tb-logger-viewer) .header #logger-url{width:500px}:host(tb-logger-viewer) .header .k-checkbox-label{font-size:12px}:host(tb-logger-viewer) .monitor{display:flex;flex:1;background:#f1f1f1;border:1px solid #ccc;padding:0;margin:5px 0}:host(tb-logger-viewer) .monitor .loading{display:flex;justify-content:center;align-items:center;flex:1}:host(tb-logger-viewer) .monitor .loading .k-i-loading{font-size:34px;color:#999}:host(tb-logger-viewer) .k-i-reset{margin-right:10px;color:#0277bd;border:none;padding:5px}:host(tb-logger-viewer) .k-i-reset:hover{cursor:pointer;color:#222}:host(tb-logger-viewer) hr{background:#0277bd;height:1px;border:none}:host(tb-logger-viewer) .logs{margin:0;padding:5px;list-style:none;overflow:auto;flex:1}:host(tb-logger-viewer) .logs .no-logs{font-size:12px}:host(tb-logger-viewer) .logs .no-logs strong{font-weight:500}:host(tb-logger-viewer) .logs .log{font-size:12px;margin:3px 0}:host(tb-logger-viewer) .logs .log .l-date{color:#999}:host(tb-logger-viewer) .logs .log .l-account-name{color:#00f}:host(tb-logger-viewer) .logs .log .l-status{text-transform:uppercase;margin:0 3px}:host(tb-logger-viewer) .logs .log .l-status.level-0{color:#000}:host(tb-logger-viewer) .logs .log .l-status.level-1{color:#00f}:host(tb-logger-viewer) .logs .log .l-status.level-2{color:orange}:host(tb-logger-viewer) .logs .log .l-status.level-3{color:red}:host(tb-logger-viewer) .logs .log .l-status.level-4{color:red}"]}]}],e.ctorParameters=function(){return[{type:w}]},e.propDecorators={appIdInput:[{type:t.ViewChild,args:["appIdInput"]}],appList:[{type:t.ViewChild,args:["appList"]}],appTypeList:[{type:t.ViewChild,args:["appTypeList"]}]},e}(),I=function(){function e(e){this.notificationService=e}return e.prototype.show=function(e,t){void 0===t&&(t="none"),this.notificationService.show({content:e,animation:{type:"slide",duration:200},position:{horizontal:"right",vertical:"bottom"},type:{style:t,icon:!0},hideAfter:4e3})},e.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:o.NotificationService}]},e.ngInjectableDef=t.defineInjectable({factory:function(){return new e(t.inject(o.NotificationService))},token:e,providedIn:"root"}),e}(),S=function(){function e(e,t){this.loggerService=e,this.notificationService=t,this.stompState=r.StompState,this.logStatus=m,this.mqQueueName=localStorage.getItem("mqQueueName")?localStorage.getItem("mqQueueName"):"",this.mqMessages=[]}return e.prototype.ngOnInit=function(){var t=this;this.mqConnectionStateSubscription=this.loggerService.mqConnectionStateObservable.subscribe(function(e){return t.onChangeMqState(e)})},e.prototype.ngAfterViewInit=function(){},e.prototype.onChangeMqState=function(e){(this.mqConnectionState=e)===r.StompState.CONNECTED&&this.mqQueueName&&this.mqSubscribe()},e.prototype.mqSubscribe=function(){var t=this;localStorage.setItem("mqQueueName",this.mqQueueName);var e="/queue/"+this.mqQueueName;this.mqQueue=this.loggerService.mqConnect(e).subscribe(function(e){return t.onMessage(e)})},e.prototype.onMessage=function(e){console.log("RabbitViewerComponent.onMessage",e),this.mqMessages.push(e);var t="none";if(e.UPContent){switch(e.UPContent.Level){case m.Warn:t="warning";break;case m.Error:case m.Fatal:t="error";break;default:t="none"}this.notificationService.show(e.UPMessage,t)}},e.decorators=[{type:t.Component,args:[{selector:"tb-rabbit-viewer",template:'<div class="header">\n    <div class="row">\n        <label id="mq-queue-name-label" class="h-label" for="mq-connection-state">MQ Connection state:</label>\n        <p id="mq-connection-state">{{stompState[loggerService.mqConnectionState]}}</p>\n    </div>\n    <div class="row">\n        <label id="mq-queue-name-label" class="h-label" for="mq-queue">Queue Name:</label>\n        <input kendoTextBox id="mq-queue-name" [(ngModel)]="mqQueueName" (click)="$event.target.select()" />\n        <button kendoButton (click)="mqSubscribe()" [disabled]="loggerService.mqConnectionState !== stompState.CONNECTED">Connect</button>\n    </div>\n</div>\n<div class="monitor">\n    <ul class="messages">\n        <li *ngIf="mqMessages.length == 0" class="no-messages">No messages in queue:<strong>{{mqQueueName}}</strong></li>\n        <li *ngFor="let m of mqMessages" class="message">\n            \x3c!-- <span class="l-msg"> {{m.UPMessage}} </span> --\x3e\n            <span class="l-date">{{m.UPContent.EntryCreated | date: \'medium\' }} </span> -\n            <span class="l-account-name"> {{m.UPContent.AccountName }} </span> -\n            <span class="l-app" *ngIf="m.UPContent.App"> {{m.UPContent.App }} -</span>\n            <span class="l-type" *ngIf="m.UPContent.RegisteredAppType"> {{m.UPContent.RegisteredAppType }} -</span>\n            <span class="l-category" *ngIf="m.UPContent.Category"> {{m.UPContent.Category }} -</span>\n            <span class="l-status level-{{m.UPContent.Level}}"> [{{logStatus[m.UPContent.Level]}}]</span>\n            <span class="l-msg"> {{m.UPContent.Message}} </span>\n        </li>\n    </ul>\n</div>',styles:[":host(tb-rabbit-viewer){flex:1;display:flex;flex-direction:column}:host(tb-rabbit-viewer) .notify{background:#ff0b0b;padding:5px 10px;margin:10px 0;color:#fff}:host(tb-rabbit-viewer) .notify p{margin:5px 0;font-size:12px}:host(tb-rabbit-viewer) .header{display:flex;flex-direction:column}:host(tb-rabbit-viewer) .header .row{display:flex;flex-direction:row;align-items:center;margin:5px 0}:host(tb-rabbit-viewer) .header .row.flex-center{justify-content:center}:host(tb-rabbit-viewer) .header .row.flex-around{justify-content:space-around}:host(tb-rabbit-viewer) .header .row.flex-between{justify-content:space-between}:host(tb-rabbit-viewer) .header .row #mq-queue-name{width:500px}:host(tb-rabbit-viewer) .header label.h-label{font-weight:500;font-size:14px;margin:0 10px}:host(tb-rabbit-viewer) .header .k-checkbox-label{font-size:12px}:host(tb-rabbit-viewer) .monitor{display:flex;flex:1;background:#f1f1f1;border:1px solid #ccc;padding:0;margin:5px 0}:host(tb-rabbit-viewer) .monitor .loading{display:flex;justify-content:center;align-items:center;flex:1}:host(tb-rabbit-viewer) .monitor .loading .k-i-loading{font-size:34px;color:#999}:host(tb-rabbit-viewer) .k-i-reset{margin-right:10px;color:#0277bd;border:none;padding:5px}:host(tb-rabbit-viewer) .k-i-reset:hover{cursor:pointer;color:#222}:host(tb-rabbit-viewer) hr{background:#0277bd;height:1px;border:none}:host(tb-rabbit-viewer) .messages{margin:0;padding:5px;list-style:none;overflow:auto;flex:1}:host(tb-rabbit-viewer) .messages .no-logs{font-size:12px}:host(tb-rabbit-viewer) .messages .no-logs strong{font-weight:500}:host(tb-rabbit-viewer) .messages .message{font-size:12px;margin:3px 0}:host(tb-rabbit-viewer) .messages .message .l-date{color:#999}:host(tb-rabbit-viewer) .messages .message .l-account-name{color:#00f}:host(tb-rabbit-viewer) .messages .message .l-status{text-transform:uppercase;margin:0 3px}:host(tb-rabbit-viewer) .messages .message .l-status.level-0{color:#000}:host(tb-rabbit-viewer) .messages .message .l-status.level-1{color:#00f}:host(tb-rabbit-viewer) .messages .message .l-status.level-2{color:orange}:host(tb-rabbit-viewer) .messages .message .l-status.level-3{color:red}:host(tb-rabbit-viewer) .messages .message .l-status.level-4{color:red}"]}]}],e.ctorParameters=function(){return[{type:w},{type:I}]},e}(),L=function(){function e(){}return e.forRoot=function(){return{ngModule:e,providers:[r.StompRService]}},e.decorators=[{type:t.NgModule,args:[{imports:[n.CommonModule,o.NotificationModule,p.ButtonsModule,c.InputsModule,u.DateInputsModule,l.FormsModule,g.DropDownsModule],declarations:[x,S],exports:[x,S],providers:[r.StompRService]}]}],e}();e.EntriesParams=d,e.OperationResult=h,e.LoggerOperationResult=f,e.Log=b,e.LogStatus=m,e.TbLoggerService=w,e.TbLoggerModule=L,e.ɵa=x,e.ɵb=S,e.ɵc=I,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=tb-logger.umd.min.js.map