{"version":3,"file":"tb-logger.umd.js.map","sources":["ng://@tb/logger/lib/models/entries.model.ts","ng://@tb/logger/lib/models/monitor.model.ts","ng://@tb/logger/lib/models/operation-result.model.ts","ng://@tb/logger/lib/models/logger-operation-result.model.ts","ng://@tb/logger/lib/models/log.model.ts","ng://@tb/logger/lib/models/log-status.enum.ts",null,"ng://@tb/logger/lib/services/tb-logger.service.ts","ng://@tb/logger/lib/services/notification.service.ts","ng://@tb/logger/lib/tb-logger.module.ts"],"sourcesContent":["export class EntriesParams {\r\n    instanceKey: string;\r\n    subscriptionKey: string;\r\n    apps: string;\r\n    appTypes: string;\r\n    category: string;\r\n    howMany: string;\r\n    offSet: string;\r\n    levels: string;\r\n    textToFind: string;\r\n    useHistory: string;\r\n    accountName: string;\r\n    rangeDateStart: string;\r\n    rangeDateEnd: string;\r\n\r\n    constructor() {}\r\n}\r\n","export class MonitorParams {\r\n    accountName: string;\r\n    instanceKey: string;\r\n    processName: string;\r\n    minutes: string;\r\n\r\n    constructor() {}\r\n}\r\n","export class OperationResult {\r\n    Result: boolean;\r\n    Message?: string;\r\n    Code?: number;\r\n    Content?: any;\r\n\r\n    constructor() {}\r\n}\r\n","export class LoggerOperationResult {\r\n    result: boolean;\r\n    message?: string;\r\n    code?: number;\r\n    content?: any;\r\n\r\n    constructor() {}\r\n}\r\n\r\nexport class TBServerInfos {\r\n    tread: TBServerInfo[];\r\n    constructor() {}\r\n}\r\n\r\nexport class TBServerInfo {\r\n    DateTime: string;\r\n    ProcessName: string;\r\n    LoginNumber?: number;\r\n    DocumentNumber?: number;\r\n\r\n    DocMetrics?: any[];\r\n    LernelMS?: number;\r\n    LoginInfos?: any[];\r\n    PhisicalMemory?: number;\r\n    UserMS?: number;\r\n    VirtualMemory?: number;\r\n\r\n    constructor() {}\r\n}\r\n","export class Log {\r\n    _id: string;\r\n    logEntry: {\r\n        app: string; // ERP, PAI, MDC, TBF\r\n        registeredAppId: string; // instance key\r\n        registeredAppType: string; // TBLOADER, NETCORE, NG, PROVISIONING\r\n        category: string; //\r\n        module: string;\r\n        subModule: string;\r\n        document: string;\r\n        subscription: string;\r\n        accountName: string;\r\n        lifetime: string;\r\n        operation: string;\r\n        contextDescription: string;\r\n        method: string;\r\n        entryCreated: string;\r\n        message: string;\r\n        level: number;\r\n    };\r\n\r\n    constructor() {}\r\n}\r\n","export enum LogStatus {\r\n    Info = 0,\r\n    Debug = 1,\r\n    Warn = 2,\r\n    Error = 3,\r\n    Fatal = 4\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\n\r\nimport { EntriesParams } from '../models/entries.model';\r\nimport { LoggerOperationResult, TBServerInfo } from '../models/logger-operation-result.model';\r\nimport { catchError, tap, map } from 'rxjs/operators';\r\nimport { Observable, of, BehaviorSubject } from 'rxjs';\r\nimport { StompRService, StompConfig, StompState } from '@stomp/ng2-stompjs';\r\nimport { Message } from '@stomp/stompjs';\r\nimport { MonitorParams } from '../models/monitor.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TbLoggerService {\r\n    public loggerUrl: string;\r\n    public serverMonitorUrl: string;\r\n    private howMany = 100;\r\n\r\n    public mqConnectionState: StompState = StompState.CLOSED;\r\n    public mqConnectionStateObservable: BehaviorSubject<StompState> = new BehaviorSubject(StompState.CLOSED);\r\n\r\n    constructor(@Inject('env') private env, private http: HttpClient, public stompService: StompRService) {\r\n        if (env.stompConfig) this.mqInit();\r\n    }\r\n\r\n    mqInit() {\r\n        if (this.env.stompConfig) {\r\n            this.stompService.config = this.env.stompConfig;\r\n            this.stompService.initAndConnect();\r\n            this.stompService.state.subscribe((status: StompState) => {\r\n                this.mqConnectionState = status;\r\n                this.mqConnectionStateObservable.next(status);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Ritorna la base url del logger,\r\n     * caricata da un file di configurazione caricato dinamicamente (assets/environment.json)\r\n     */\r\n    getLoggerUrl() {\r\n        return this.loggerUrl ? this.loggerUrl : this.env.logger.url;\r\n    }\r\n\r\n    /**\r\n     * M4 Backend URL\r\n     */\r\n    getServerMonitorUrl() {\r\n        return this.serverMonitorUrl ? this.serverMonitorUrl : this.env.serverMonitor.url;\r\n    }\r\n\r\n    /**\r\n     * Console.log in attesa di post to logger\r\n     *\r\n     * @param message\r\n     * @param optionalParams\r\n     */\r\n    log(message?: any, ...optionalParams: any[]): void {\r\n        console.log(message, ...optionalParams);\r\n    }\r\n\r\n    /**\r\n     * Console.log in attesa di post to logger\r\n     *\r\n     * @param message\r\n     * @param optionalParams\r\n     */\r\n    debug(message?: any, ...optionalParams: any[]): void {\r\n        console.log(message, ...optionalParams);\r\n    }\r\n\r\n    /**\r\n     * Console.warn in attesa di post to logger\r\n     *\r\n     * @param message\r\n     * @param optionalParams\r\n     */\r\n    warn(message?: any, ...optionalParams: any[]): void {\r\n        console.warn(message, ...optionalParams);\r\n    }\r\n\r\n    /**\r\n     * Console.error in attesa di post to logger\r\n     *\r\n     * @param message\r\n     * @param optionalParams\r\n     */\r\n    error(message?: any, ...optionalParams: any[]): void {\r\n        console.error(message, ...optionalParams);\r\n    }\r\n\r\n    /**\r\n     * Return logs: LoggerOperationResult\r\n     *\r\n     * @param params: EntriesParams\r\n     */\r\n    public getLogs(params: EntriesParams): Observable<boolean | LoggerOperationResult> {\r\n        if (!params.instanceKey) {\r\n            const error = new LoggerOperationResult();\r\n            error.result = false;\r\n            error.message = 'Error - No instanceKey, no party';\r\n            return of(error);\r\n        }\r\n        // console.log('this.getLoggerUrl()', this.getLoggerUrl());\r\n        const url = this.getLoggerUrl() + `entries/${params.instanceKey}`;\r\n\r\n        let p = new HttpParams();\r\n        p = p.append('howMany', '' + this.howMany);\r\n        if (params.accountName) p = p.append('accountName', params.accountName);\r\n        if (params.subscriptionKey) p = p.append('subscription', params.subscriptionKey);\r\n        if (params.category) p = p.append('categories', params.category);\r\n        if (params.apps) p = p.append('apps', params.apps);\r\n        if (params.appTypes) p = p.append('appTypes', params.appTypes);\r\n        if (params.levels) p = p.append('levels', params.levels);\r\n        if (params.rangeDateStart && params.rangeDateEnd) {\r\n            if (params.rangeDateStart === params.rangeDateEnd) p = p.append('date', params.rangeDateStart);\r\n            else p = p.append('date', params.rangeDateStart + ';' + params.rangeDateEnd);\r\n        }\r\n        const httpOptions = {\r\n            params: p\r\n        };\r\n\r\n        return this.http.get<LoggerOperationResult>(url, httpOptions).pipe(\r\n            // tap(op => console.log('TbLoggerService.getLogs', op)),\r\n            catchError(this.handleError('TbLoggerService.getLogs', false))\r\n        );\r\n    }\r\n\r\n    public getApps(appId: string): Observable<boolean | LoggerOperationResult> {\r\n        if (!appId) {\r\n            const error = new LoggerOperationResult();\r\n            error.result = false;\r\n            error.message = 'Error - No appId, no party';\r\n            return of(error);\r\n        }\r\n\r\n        const url = this.getLoggerUrl() + `apps/${appId}`;\r\n\r\n        return this.http.get<LoggerOperationResult>(url).pipe(\r\n            // tap(op => console.log('TbLoggerService.getApps with appId: ', appId, op)),\r\n            catchError(this.handleError('TbLoggerService.getApps', false))\r\n        );\r\n    }\r\n\r\n    public getAppTypes(appId: string): Observable<boolean | LoggerOperationResult> {\r\n        if (!appId) {\r\n            const error = new LoggerOperationResult();\r\n            error.result = false;\r\n            error.message = 'Error - No appId, no party';\r\n            return of(error);\r\n        }\r\n\r\n        const url = this.getLoggerUrl() + `appTypes/${appId}`;\r\n\r\n        return this.http.get<LoggerOperationResult>(url).pipe(\r\n            // tap(op => console.log('TbLoggerService.getAppTypes with appId: ', appId, op)),\r\n            catchError(this.handleError('TbLoggerService.getAppTypes', false))\r\n        );\r\n    }\r\n\r\n    public getInstanceKey(): Observable<boolean | LoggerOperationResult> {\r\n        const url = this.getLoggerUrl() + `appIds`;\r\n\r\n        return this.http.get<LoggerOperationResult>(url).pipe(\r\n            // tap(op => console.log(url, 'TbLoggerService.getInstanceKey with appId: ', op)),\r\n            catchError(this.handleError('TbLoggerService.getInstanceKey', false))\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Legge tutte le subscription\r\n     */\r\n    public getSubscriptionKey(): Observable<boolean | LoggerOperationResult> {\r\n        const url = this.getLoggerUrl() + `subscriptionKeys`;\r\n\r\n        return this.http.get<LoggerOperationResult>(url).pipe(\r\n            // tap(op => console.log('TbLoggerService.getSubscriptionKey: ', op)),\r\n            catchError(this.handleError('TbLoggerService.getSubscriptionKey', false))\r\n        );\r\n    }\r\n\r\n    public getCategories(appId: string): Observable<boolean | LoggerOperationResult> {\r\n        if (!appId) {\r\n            const error = new LoggerOperationResult();\r\n            error.result = false;\r\n            error.message = 'Error - No appId, no party';\r\n            return of(error);\r\n        }\r\n\r\n        const url = this.getLoggerUrl() + `categories/${appId}`;\r\n\r\n        return this.http.get<LoggerOperationResult>(url).pipe(\r\n            // tap(op => console.log('TbLoggerService.getCategories with appId: ', appId, op)),\r\n            catchError(this.handleError('TbLoggerService.getCategories', false))\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Handle Http operation that failed.\r\n     * Let the app continue.\r\n     * @param operation - name of the operation that failed\r\n     * @param result - optional value to return as the observable result\r\n     */\r\n    public handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n            console.error(`${operation} failed: ${error.error}`);\r\n\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Connessione a RabbitMQ\r\n     */\r\n    public mqConnect(queueName: string) {\r\n        return this.stompService.subscribe(queueName).pipe(map((msg: Message) => JSON.parse(msg.body)));\r\n    }\r\n\r\n    public mqConnected() {\r\n        return this.stompService.connected();\r\n    }\r\n    public mqDisconnect() {\r\n        return this.stompService.disconnect();\r\n    }\r\n\r\n    // -------------------------------------------------------------------------------------------------------\r\n    // PARTE TBSERVERMONITOR\r\n    // -------------------------------------------------------------------------------------------------------\r\n    public getTBInfosLogs(params: MonitorParams): Observable<boolean | TBServerInfo[]> {\r\n        let p = new HttpParams();\r\n\r\n        if (params.accountName) p = p.append('accountName', '' + params.accountName);\r\n        if (params.processName) p = p.append('processName', '' + params.processName);\r\n        if (params.minutes) p = p.append('minute', '' + params.minutes);\r\n\r\n        const httpOptions = { params: p };\r\n\r\n        const url = this.getServerMonitorUrl() + `tbServers/${params.instanceKey}`;\r\n\r\n        return this.http.get<TBServerInfo[]>(url, httpOptions).pipe(catchError(this.handleError('TbLoggerService.getTBInfosLogs', false)));\r\n    }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\n\r\nimport { NotificationService } from '@progress/kendo-angular-notification';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TbNotificationService {\r\n    constructor(private notificationService: NotificationService) {}\r\n\r\n    public show(msg, style: any = 'none'): void {\r\n        this.notificationService.show({\r\n            content: msg,\r\n            animation: { type: 'slide', duration: 200 },\r\n            position: { horizontal: 'right', vertical: 'bottom' },\r\n            type: { style: style, icon: true },\r\n            hideAfter: 4000\r\n        });\r\n    }\r\n}\r\n","import { NgModule, ModuleWithProviders, Inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { ButtonsModule } from '@progress/kendo-angular-buttons';\r\nimport { DropDownsModule } from '@progress/kendo-angular-dropdowns';\r\nimport { InputsModule } from '@progress/kendo-angular-inputs';\r\nimport { DateInputsModule } from '@progress/kendo-angular-dateinputs';\r\nimport { NotificationModule } from '@progress/kendo-angular-notification';\r\n\r\nimport { StompRService } from '@stomp/ng2-stompjs';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, NotificationModule, ButtonsModule, InputsModule, DateInputsModule, FormsModule, DropDownsModule],\r\n    providers: [StompRService]\r\n})\r\nexport class TbLoggerModule {\r\n    static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: TbLoggerModule,\r\n            providers: [StompRService]\r\n        };\r\n    }\r\n}\r\n"],"names":["StompState","BehaviorSubject","of","HttpParams","catchError","map","Injectable","Inject","HttpClient","StompRService","NotificationService","NgModule","CommonModule","NotificationModule","ButtonsModule","InputsModule","DateInputsModule","FormsModule","DropDownsModule"],"mappings":"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"}
