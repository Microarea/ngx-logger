{"__symbolic":"module","version":4,"metadata":{"EntriesParams":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor"}]}},"OperationResult":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor"}]}},"LoggerOperationResult":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor"}]}},"Log":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor"}]}},"LogStatus":{"Info":0,"Debug":1,"Warn":2,"Error":3,"Fatal":4},"TbLoggerService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":10,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":20,"character":17},"arguments":["env"]}],null,null],"parameters":[null,{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":20,"character":58},{"__symbolic":"reference","module":"@stomp/ng2-stompjs","name":"StompRService","line":20,"character":91}]}],"mqInit":[{"__symbolic":"method"}],"getLoggerUrl":[{"__symbolic":"method"}],"log":[{"__symbolic":"method"}],"debug":[{"__symbolic":"method"}],"warn":[{"__symbolic":"method"}],"error":[{"__symbolic":"method"}],"getLogs":[{"__symbolic":"method"}],"getApps":[{"__symbolic":"method"}],"getAppTypes":[{"__symbolic":"method"}],"handleError":[{"__symbolic":"method"}],"mqConnect":[{"__symbolic":"method"}],"mqConnected":[{"__symbolic":"method"}],"mqDisconnect":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"TbLoggerModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":15,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":16,"character":14},{"__symbolic":"reference","module":"@progress/kendo-angular-notification","name":"NotificationModule","line":16,"character":28},{"__symbolic":"reference","module":"@progress/kendo-angular-buttons","name":"ButtonsModule","line":16,"character":48},{"__symbolic":"reference","module":"@progress/kendo-angular-inputs","name":"InputsModule","line":16,"character":63},{"__symbolic":"reference","module":"@progress/kendo-angular-dateinputs","name":"DateInputsModule","line":16,"character":77},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":16,"character":95},{"__symbolic":"reference","module":"@progress/kendo-angular-dropdowns","name":"DropDownsModule","line":16,"character":108}],"declarations":[{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵb"}],"exports":[{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵb"}],"providers":[{"__symbolic":"reference","module":"@stomp/ng2-stompjs","name":"StompRService","line":19,"character":16}]}]}],"members":{},"statics":{"forRoot":{"__symbolic":"function","parameters":[],"value":{"ngModule":{"__symbolic":"reference","name":"TbLoggerModule"},"providers":[{"__symbolic":"reference","module":"@stomp/ng2-stompjs","name":"StompRService","line":25,"character":24}]}}}},"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":11,"character":1},"arguments":[{"selector":"tb-logger-viewer","template":"<div class=\"header\">\n    <div class=\"row\">\n        <label id=\"logger-url-label\" class=\"h-label\" for=\"logger-url\">Logger URL:</label>\n        <input kendoTextBox id=\"logger-url\" [(ngModel)]=\"loggerUrl\" (blur)=\"setLoggerUrl($event)\" (click)=\"$event.target.select()\" />\n        <span class=\"k-icon k-i-reset \" (click)=\"getLogs()\"></span>\n\n        <div class=\"autorefresh\">\n            <input type=\"checkbox\" id=\"autoRefresh\" class=\"k-checkbox\" [ngModel]=\"checked\" (ngModelChange)=\"checkAutoRefresh($event)\">\n            <label class=\"k-checkbox-label\" for=\"autoRefresh\">Auto refresh (5s)</label>\n        </div>\n    </div>\n    <div class=\"row\">\n\n        <div class=\"filter\">\n            <!-- APP ID -->\n            <label id=\"logger-app-id-label\" class=\"h-label\" for=\"logger-app-id\" (click)=\"appListInit()\">Instance Key:</label>\n            <input kendoTextBox #appIdInput [(ngModel)]=\"appId\" (blur)=\"setAppId($event)\" id=\"ka-app-id\" (click)=\"$event.target.select()\"\n                placeholder=\"e.g. 2d136c61-aac2-442d-926c-a531c3685035\" />\n        </div>\n\n        <div class=\"filter\">\n            <!-- APP -->\n            <label id=\"logger-app-label\" class=\"h-label\" for=\"logger-app\">App:</label>\n            <kendo-autocomplete #appList [data]=\"appData\" [suggest]=\"true\" [placeholder]=\"'e.g. ERP, MDC, TBF'\"\n                [(ngModel)]=\"app\" (valueChange)=\"setApp($event)\" id=\"ka-app\">\n            </kendo-autocomplete>\n        </div>\n\n        <div class=\"filter\">\n            <!-- APP TYPE -->\n            <label id=\"logger-app-type-label\" class=\"h-label\" for=\"logger-app-type\">AppType:</label>\n            <kendo-autocomplete #appTypeList [data]=\"appTypeData\" [suggest]=\"true\" [placeholder]=\"'e.g. TBLOADER, NETCORE, NG'\"\n                [(ngModel)]=\"appType\" (valueChange)=\"setAppType($event)\" id=\"ka-app-type\">\n            </kendo-autocomplete>\n        </div>\n\n    </div>\n    <div class=\"notify\" *ngIf=\"message\">\n        <p>{{message}}</p>\n    </div>\n</div>\n\n<div class=\"monitor\">\n\n    <div class=\"loading\" *ngIf=\"loading\">\n        <span class=\"k-icon k-i-loading\"></span>\n    </div>\n\n    <ul class=\"logs\" *ngIf=\"!loading\">\n        <li *ngIf=\"logs.length == 0\" class=\"no-logs\">No Logs with appId:<strong>{{appId}}</strong></li>\n        <li *ngFor=\"let log of logs\" class=\"log\">\n            <span class=\"l-date\">{{log.LogEntry.EntryCreated | date: 'medium' }} </span> -\n            <span class=\"l-account-name\"> {{log.LogEntry.AccountName }} </span> -\n            <span class=\"l-app\" *ngIf=\"log.LogEntry.App\"> {{log.LogEntry.App }} -</span>\n            <span class=\"l-type\" *ngIf=\"log.LogEntry.RegisteredAppType\"> {{log.LogEntry.RegisteredAppType }} -</span>\n            <span class=\"l-category\" *ngIf=\"log.LogEntry.Category\"> {{log.LogEntry.Category }} -</span>\n            <span class=\"l-status level-{{log.LogEntry.Level}}\">[{{logStatus[log.LogEntry.Level]}}]</span>\n            <span class=\"l-msg\"> {{log.LogEntry.Message}} </span>\n        </li>\n    </ul>\n</div>","styles":[":host(tb-logger-viewer){flex:1;display:flex;flex-direction:column}:host(tb-logger-viewer) .notify{background:#ff0b0b;padding:5px 10px;margin:10px 0;color:#fff}:host(tb-logger-viewer) .notify p{margin:5px 0;font-size:12px}:host(tb-logger-viewer) .header{display:flex;flex-direction:column;margin:30px 0 10px}:host(tb-logger-viewer) .header .row{display:flex;flex-direction:row;align-items:center;margin:5px 0}:host(tb-logger-viewer) .header .row.flex-center{justify-content:center}:host(tb-logger-viewer) .header .row.flex-around{justify-content:space-around}:host(tb-logger-viewer) .header .row.flex-between{justify-content:space-between}:host(tb-logger-viewer) .header .row .filter #ka-app-id{width:330px}:host(tb-logger-viewer) .header label.h-label{font-weight:500;font-size:14px;margin:0 10px}:host(tb-logger-viewer) .header #logger-url{width:500px}:host(tb-logger-viewer) .header .k-checkbox-label{font-size:12px}:host(tb-logger-viewer) .monitor{display:flex;flex:1;background:#f1f1f1;border:1px solid #ccc;padding:0;margin:5px 0}:host(tb-logger-viewer) .monitor .loading{display:flex;justify-content:center;align-items:center;flex:1}:host(tb-logger-viewer) .monitor .loading .k-i-loading{font-size:34px;color:#999}:host(tb-logger-viewer) .k-i-reset{margin-right:10px;color:#0277bd;border:none;padding:5px}:host(tb-logger-viewer) .k-i-reset:hover{cursor:pointer;color:#222}:host(tb-logger-viewer) hr{background:#0277bd;height:1px;border:none}:host(tb-logger-viewer) .logs{margin:0;padding:5px;list-style:none;overflow:auto;flex:1}:host(tb-logger-viewer) .logs .no-logs{font-size:12px}:host(tb-logger-viewer) .logs .no-logs strong{font-weight:500}:host(tb-logger-viewer) .logs .log{font-size:12px;margin:3px 0}:host(tb-logger-viewer) .logs .log .l-date{color:#999}:host(tb-logger-viewer) .logs .log .l-account-name{color:#00f}:host(tb-logger-viewer) .logs .log .l-status{text-transform:uppercase;margin:0 3px}:host(tb-logger-viewer) .logs .log .l-status.level-0{color:#000}:host(tb-logger-viewer) .logs .log .l-status.level-1{color:#00f}:host(tb-logger-viewer) .logs .log .l-status.level-2{color:orange}:host(tb-logger-viewer) .logs .log .l-status.level-3{color:red}:host(tb-logger-viewer) .logs .log .l-status.level-4{color:red}"]}]}],"members":{"appIdInput":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":78,"character":5},"arguments":["appIdInput"]}]}],"appList":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":83,"character":5},"arguments":["appList"]}]}],"appTypeList":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":89,"character":5},"arguments":["appTypeList"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TbLoggerService"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"appListInit":[{"__symbolic":"method"}],"getLogs":[{"__symbolic":"method"}],"setLoggerUrl":[{"__symbolic":"method"}],"setApp":[{"__symbolic":"method"}],"setAppId":[{"__symbolic":"method"}],"setAppType":[{"__symbolic":"method"}],"close":[{"__symbolic":"method"}],"checkAutoRefresh":[{"__symbolic":"method"}]}},"ɵb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":9,"character":1},"arguments":[{"selector":"tb-rabbit-viewer","template":"<div class=\"header\">\n    <div class=\"row\">\n        <label id=\"mq-queue-name-label\" class=\"h-label\" for=\"mq-connection-state\">MQ Connection state:</label>\n        <p id=\"mq-connection-state\">{{stompState[loggerService.mqConnectionState]}}</p>\n    </div>\n    <div class=\"row\">\n        <label id=\"mq-queue-name-label\" class=\"h-label\" for=\"mq-queue\">Queue Name:</label>\n        <input kendoTextBox id=\"mq-queue-name\" [(ngModel)]=\"mqQueueName\" (click)=\"$event.target.select()\" />\n        <button kendoButton (click)=\"mqSubscribe()\" [disabled]=\"loggerService.mqConnectionState !== stompState.CONNECTED\">Connect</button>\n    </div>\n</div>\n<div class=\"monitor\">\n    <ul class=\"messages\">\n        <li *ngIf=\"mqMessages.length == 0\" class=\"no-messages\">No messages in queue:<strong>{{mqQueueName}}</strong></li>\n        <li *ngFor=\"let m of mqMessages\" class=\"message\">\n            <!-- <span class=\"l-msg\"> {{m.UPMessage}} </span> -->\n            <span class=\"l-date\">{{m.UPContent.EntryCreated | date: 'medium' }} </span> -\n            <span class=\"l-account-name\"> {{m.UPContent.AccountName }} </span> -\n            <span class=\"l-app\" *ngIf=\"m.UPContent.App\"> {{m.UPContent.App }} -</span>\n            <span class=\"l-type\" *ngIf=\"m.UPContent.RegisteredAppType\"> {{m.UPContent.RegisteredAppType }} -</span>\n            <span class=\"l-category\" *ngIf=\"m.UPContent.Category\"> {{m.UPContent.Category }} -</span>\n            <span class=\"l-status level-{{m.UPContent.Level}}\"> [{{logStatus[m.UPContent.Level]}}]</span>\n            <span class=\"l-msg\"> {{m.UPContent.Message}} </span>\n        </li>\n    </ul>\n</div>","styles":[":host(tb-rabbit-viewer){flex:1;display:flex;flex-direction:column}:host(tb-rabbit-viewer) .notify{background:#ff0b0b;padding:5px 10px;margin:10px 0;color:#fff}:host(tb-rabbit-viewer) .notify p{margin:5px 0;font-size:12px}:host(tb-rabbit-viewer) .header{display:flex;flex-direction:column}:host(tb-rabbit-viewer) .header .row{display:flex;flex-direction:row;align-items:center;margin:5px 0}:host(tb-rabbit-viewer) .header .row.flex-center{justify-content:center}:host(tb-rabbit-viewer) .header .row.flex-around{justify-content:space-around}:host(tb-rabbit-viewer) .header .row.flex-between{justify-content:space-between}:host(tb-rabbit-viewer) .header .row #mq-queue-name{width:500px}:host(tb-rabbit-viewer) .header label.h-label{font-weight:500;font-size:14px;margin:0 10px}:host(tb-rabbit-viewer) .header .k-checkbox-label{font-size:12px}:host(tb-rabbit-viewer) .monitor{display:flex;flex:1;background:#f1f1f1;border:1px solid #ccc;padding:0;margin:5px 0}:host(tb-rabbit-viewer) .monitor .loading{display:flex;justify-content:center;align-items:center;flex:1}:host(tb-rabbit-viewer) .monitor .loading .k-i-loading{font-size:34px;color:#999}:host(tb-rabbit-viewer) .k-i-reset{margin-right:10px;color:#0277bd;border:none;padding:5px}:host(tb-rabbit-viewer) .k-i-reset:hover{cursor:pointer;color:#222}:host(tb-rabbit-viewer) hr{background:#0277bd;height:1px;border:none}:host(tb-rabbit-viewer) .messages{margin:0;padding:5px;list-style:none;overflow:auto;flex:1}:host(tb-rabbit-viewer) .messages .no-logs{font-size:12px}:host(tb-rabbit-viewer) .messages .no-logs strong{font-weight:500}:host(tb-rabbit-viewer) .messages .message{font-size:12px;margin:3px 0}:host(tb-rabbit-viewer) .messages .message .l-date{color:#999}:host(tb-rabbit-viewer) .messages .message .l-account-name{color:#00f}:host(tb-rabbit-viewer) .messages .message .l-status{text-transform:uppercase;margin:0 3px}:host(tb-rabbit-viewer) .messages .message .l-status.level-0{color:#000}:host(tb-rabbit-viewer) .messages .message .l-status.level-1{color:#00f}:host(tb-rabbit-viewer) .messages .message .l-status.level-2{color:orange}:host(tb-rabbit-viewer) .messages .message .l-status.level-3{color:red}:host(tb-rabbit-viewer) .messages .message .l-status.level-4{color:red}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TbLoggerService"},{"__symbolic":"reference","name":"ɵc"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"onChangeMqState":[{"__symbolic":"method"}],"mqSubscribe":[{"__symbolic":"method"}],"onMessage":[{"__symbolic":"method"}]}},"ɵc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":4,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@progress/kendo-angular-notification","name":"NotificationService","line":8,"character":45}]}],"show":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}}},"origins":{"EntriesParams":"./lib/models/entries.model","OperationResult":"./lib/models/operation-result.model","LoggerOperationResult":"./lib/models/logger-operation-result.model","Log":"./lib/models/log.model","LogStatus":"./lib/models/log-status.enum","TbLoggerService":"./lib/services/tb-logger.service","TbLoggerModule":"./lib/tb-logger.module","ɵa":"./lib/components/logger-viewer/logger-viewer.component","ɵb":"./lib/components/rabbit-viewer/rabbit-viewer.component","ɵc":"./lib/services/notification.service"},"importAs":"@tb/logger"}